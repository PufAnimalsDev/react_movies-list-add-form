{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","validateUrl","useState","Math","random","toString","slice","id","wasTouched","setWasTouched","hasError","htmlFor","classNames","type","placeholder","onBlur","event","target","pattern","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","url","match","disableButton","current","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2da81b2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { useState } from 'react';\n\ninterface TextFieldProps {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (name: string, newValue: string) => void,\n  validateUrl?: (value: string) => boolean,\n}\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<TextFieldProps> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  validateUrl = () => true,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [wasTouched, setWasTouched] = useState(false);\n  const hasError = wasTouched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          name={name}\n          placeholder={`Enter ${label}`}\n          value={value}\n          onBlur={() => setWasTouched(true)}\n          onChange={event => onChange(event.target.name, event.target.value)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {value && !validateUrl(value) && (\n        <p className=\"help is-danger\">{`${label} is incorrect`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\ninterface NewMovieProps {\n  onAdd: (newMovie: Movie) => void,\n}\n\nexport const NewMovie: React.FC<NewMovieProps> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const validateUrl = (url: string) => {\n    return (url.match(pattern) || [])[0] === url;\n  };\n\n  const {\n    title, imgUrl, imdbUrl, imdbId, description,\n  } = newMovie;\n\n  const disableButton = !title\n    || (!imgUrl || !validateUrl(imgUrl))\n    || (!imdbUrl || !validateUrl(imdbUrl))\n    || !imdbId;\n\n  const clearInputs = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const onChange = (name: string, value: string) => {\n    setNewMovie(current => ({\n      ...current,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    setCount(prevCount => prevCount + 1);\n    clearInputs();\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={onChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={onChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={onChange}\n        validateUrl={validateUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={onChange}\n        validateUrl={validateUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={onChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disableButton}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (newMovie: Movie) => {\n    setMovies(current => ([\n      ...current,\n      newMovie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}